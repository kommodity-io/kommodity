// Code generated by generate-scheme.sh; DO NOT EDIT.
//
//nolint
package provider

import (
    "k8s.io/apimachinery/pkg/runtime"
    "k8s.io/apimachinery/pkg/runtime/schema"

	scheme_1 "sigs.k8s.io/cluster-api/api/v1beta1"
	scheme_2 "github.com/siderolabs/cluster-api-bootstrap-provider-talos/api/v1alpha2"
	scheme_3 "github.com/siderolabs/cluster-api-bootstrap-provider-talos/api/v1alpha3"
	scheme_4 "github.com/siderolabs/cluster-api-control-plane-provider-talos/api/v1alpha3"
	scheme_5 "sigs.k8s.io/cluster-api-provider-azure/api/v1alpha1"
	scheme_6 "sigs.k8s.io/cluster-api-provider-azure/api/v1beta1"
	scheme_7 "sigs.k8s.io/cluster-api-provider-azure/exp/api/v1beta1"
)

func addAllProvidersToScheme(scheme *runtime.Scheme) error {
    var err error
	if err = scheme_1.AddToScheme(scheme); err != nil { return err }
	if err = scheme_2.AddToScheme(scheme); err != nil { return err }
	if err = scheme_3.AddToScheme(scheme); err != nil { return err }
	if err = scheme_4.AddToScheme(scheme); err != nil { return err }
	if err = scheme_5.AddToScheme(scheme); err != nil { return err }
	if err = scheme_6.AddToScheme(scheme); err != nil { return err }
	if err = scheme_7.AddToScheme(scheme); err != nil { return err }
    return nil
}

func GetProviderGroupKindVersions() []schema.GroupVersion {
  return []schema.GroupVersion{
		scheme_1.GroupVersion,
		scheme_2.GroupVersion,
		scheme_3.GroupVersion,
		scheme_4.GroupVersion,
		scheme_5.GroupVersion,
		scheme_6.GroupVersion,
		scheme_7.GroupVersion,
  }
}
